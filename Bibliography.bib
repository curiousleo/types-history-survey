
@incollection{de_bruijn_survey_1980,
	location = {London; New York},
	title = {A Survey of the Project {AUTOMATH}},
	pages = {479--490},
	booktitle = {To H. B. Curry: Essays on Combinatory Logic, Lambda Calculus and Formalism},
	publisher = {Academic Press},
	author = {de Bruijn, Nicolaas G.},
	editor = {Seldin, Jonathan P. and Hindley, Roger},
	date = {1980}
}

@incollection{howard_formulae-as-types_1980,
	location = {London; New York},
	title = {The Formulæ-as-Types Notion of Construction},
	pages = {479--490},
	booktitle = {To H. B. Curry: Essays on Combinatory Logic, Lambda Calculus and Formalism},
	publisher = {Academic Press},
	author = {Howard, William A.},
	editor = {Seldin, Jonathan P. and Hindley, Roger},
	date = {1980},
	note = {Original paper manuscript from 1969}
}

@book{sambin_intuitionistic_1984,
	location = {Naples},
	title = {Intuitionistic Type Theory},
	series = {Studies in Proof Theory},
	pagetotal = {91},
	publisher = {Bibliopolis},
	author = {Martin-Löf, Per},
	editor = {Sambin, Giovanni},
	date = {1984},
	note = {Notes by Giovanni Sambin of a series of lectures given in Padua, June 1980}
}

@inproceedings{martin-lof_constructive_1985,
	location = {Upper Saddle River, {NJ}, {USA}},
	title = {Constructive Mathematics and Computer Programming},
	isbn = {0-13-561465-1},
	url = {http://dl.acm.org/citation.cfm?id=3721.3731},
	pages = {167--184},
	booktitle = {Proc. Of a Discussion Meeting of the Royal Society of London on Mathematical Logic and Programming Languages},
	publisher = {Prentice-Hall, Inc.},
	author = {Martin-Löf, P.},
	urldate = {2014-11-20},
	date = {1985}
}

@article{martin-lof_truth_1987,
	title = {Truth of a proposition, evidence of a judgement, validity of a proof},
	volume = {73},
	issn = {0039-7857, 1573-0964},
	url = {http://link.springer.com/article/10.1007/BF00484985},
	doi = {10.1007/BF00484985},
	pages = {407--420},
	number = {3},
	journaltitle = {Synthese},
	shortjournal = {Synthese},
	author = {Martin-Löf, Per},
	urldate = {2014-11-21},
	date = {1987-12-01},
	langid = {english},
	keywords = {Epistemology, Logic, Metaphysics, Philosophy, Philosophy of Language},
	file = {Full Text PDF:/home/leo/.mozilla/firefox/dlbwkpok.default/zotero/storage/CREQSURS/Martin-Löf - 1987 - Truth of a proposition, evidence of a judgement, v.pdf:application/pdf;Snapshot:/home/leo/.mozilla/firefox/dlbwkpok.default/zotero/storage/IQRIRQEI/10.html:text/html}
}

@incollection{coquand_type_2014,
	edition = {Fall 2014},
	title = {Type Theory},
	url = {http://plato.stanford.edu/archives/fall2014/entries/type-theory/},
	abstract = {The topic of type theory is fundamental both in logic and computerscience. We limit ourselves here to sketch some aspects that areimportant in logic. For the importance of types in computer science, werefer the reader for instance to Reynolds 1983 and 1985.},
	booktitle = {The Stanford Encyclopedia of Philosophy},
	author = {Coquand, Thierry},
	editor = {Zalta, Edward N.},
	urldate = {2014-10-17},
	date = {2014},
	keywords = {category theory, Frege, Gottlob, Frege, Gottlob: theorem and foundations for arithmetic, logic: paraconsistent, mathematics: inconsistent, Peano, Giuseppe, Principia Mathematica, Russell, Bertrand, type theory: Church's type theory, type theory: constructive},
	file = {SEP - Snapshot:/home/leo/.mozilla/firefox/dlbwkpok.default/zotero/storage/5KQ5JTBS/entriesype-theory.html:text/html}
}

@mvbook{sorensen_lectures_2006,
	location = {Amsterdam; Boston},
	edition = {First edition},
	title = {Lectures on the Curry-Howard Isomorphism},
	volume = {149},
	isbn = {9780444520777},
	series = {Studies in Logic and the Foundation of Mathematics},
	abstract = {The Curry-Howard isomorphism states an amazing correspondence between systems of formal logic as encountered in proof theory and computational calculi as found in type theory. For instance, minimal propositional logic corresponds to simply typed lambda-calculus, first-order logic corresponds to dependent types, second-order logic corresponds to polymorphic types, sequent calculus is related to explicit substitution, etc.  The isomorphism has many aspects, even at the syntactic level: formulas correspond to types, proofs correspond to terms, provability corresponds to inhabitation, proof normalization corresponds to term reduction, etc.  But there is more to the isomorphism than this. For instance, it is an old idea---due to Brouwer, Kolmogorov, and Heyting---that a constructive proof of an implication is a procedure that transforms proofs of the antecedent into proofs of the succedent; the Curry-Howard isomorphism gives syntactic representations of such procedures. The Curry-Howard isomorphism also provides theoretical foundations for many modern proof-assistant systems (e.g. Coq). This book give an introduction  to parts of proof theory and related aspects of type theory relevant for the Curry-Howard isomorphism. It can serve as an introduction to any or both of typed lambda-calculus and intuitionistic logic. Key features  - The Curry-Howard Isomorphism treated as common theme  - Reader-friendly introduction to two complementary subjects: Lambda-calculus and constructive logics  - Thorough study of the connection between calculi and logics  - Elaborate study of classical logics and control operators  - Account of dialogue games for classical and intuitionistic logic  - Theoretical foundations of computer-assisted reasoning The Curry-Howard Isomorphism treated as the common theme. Reader-friendly introduction to two complementary subjects: lambda-calculus and  constructive logics Thorough study of the connection between calculi and logics. Elaborate study of classical logics and control operators. Account of dialogue games for classical and intuitionistic logic. Theoretical foundations of computer-assisted reasoning},
	pagetotal = {460},
	publisher = {Elsevier},
	author = {Sørensen, Morten H. and Urzyczyn, Pawel},
	date = {2006-06-01},
	keywords = {Curry-Howard isomorphism, Lambda calculus, Proof theory}
}

@incollection{lambek_-calculus_1980,
	location = {London; New York},
	title = {From λ-Calculus to Cartesian Closed Categories},
	pages = {479--490},
	booktitle = {To H. B. Curry: Essays on Combinatory Logic, Lambda Calculus and Formalism},
	publisher = {Academic Press},
	author = {Lambek, Joachim},
	editor = {Seldin, Jonathan P. and Hindley, Roger},
	date = {1980},
	note = {Original paper manuscript from 1969},
	file = {PhilPapers - Snapshot:/home/leo/.mozilla/firefox/dlbwkpok.default/zotero/storage/33B9MUTB/HOWTFN.html:text/html}
}

@incollection{barendregt_lambda_1992,
	location = {Oxford; New York},
	title = {Lambda calculi with types},
	volume = {2},
	isbn = {9780198537618},
	series = {Handbooks of Logic in Computer Science},
	abstract = {The Handbook of Logic in Computer Science is a multi-volume work covering all major areas of application of logic to theoretical computer science.  The Handbook comprises six volumes. Each volume contains five or six chapters giving an in-depth overview of one of the major topics in the field. It is the result of many years of co-operative effort by some of the most eminent frontline researchers in the area. It will no doubt be the standard reference work in logic and theoretical computer science for years to come - essential reading for all those interested in theoretical computer science and logic.},
	volumes = {6},
	booktitle = {Handbook of Logic in Computer Science, Volume 2: Background: Computational Structures},
	publisher = {Oxford University Press},
	author = {Barendregt, Henk},
	editor = {Abramsky, Samson and Gabbay, Dov M. and Maibaum, Thomas S. E.},
	date = {1992}
}

@book{barendregt_lambda_2013,
	location = {Cambridge; New York},
	title = {Lambda Calculus with Types},
	isbn = {9780521766142},
	abstract = {This handbook with exercises reveals in formalisms, hitherto mainly used for hardware and software design and verification, unexpected mathematical beauty. The lambda calculus forms a prototype universal programming language, which in its untyped version is related to Lisp, and was treated in the first author's classic The Lambda Calculus (1984). The formalism has since been extended with types and used in functional programming (Haskell, Clean) and proof assistants (Coq, Isabelle, {HOL}), used in designing and verifying {IT} products and mathematical proofs.  In this book, the authors focus on three classes of typing for lambda terms: simple types, recursive types and intersection types. It is in these three formalisms of terms and types that the unexpected mathematical beauty is revealed. The treatment is authoritative and comprehensive, complemented by an exhaustive bibliography, and numerous exercises are provided to deepen the readers' understanding and increase their confidence using types.},
	pagetotal = {856},
	publisher = {Cambridge University Press},
	author = {Barendregt, Henk and Dekkers, Wil and Statman, Richard},
	date = {2013-06-20}
}

@article{church_formulation_1940,
	title = {A Formulation of the Simple Theory of Types},
	volume = {5},
	rights = {Copyright © 1940 Association for Symbolic Logic},
	issn = {0022-4812},
	url = {http://www.jstor.org/stable/2266170},
	doi = {10.2307/2266170},
	pages = {56--68},
	number = {2},
	journaltitle = {The Journal of Symbolic Logic},
	shortjournal = {The Journal of Symbolic Logic},
	author = {Church, Alonzo},
	urldate = {2014-10-27},
	date = {1940-06-01},
	file = {JSTOR Full Text PDF:/home/leo/.mozilla/firefox/dlbwkpok.default/zotero/storage/33X7JVM2/Church - 1940 - A Formulation of the Simple Theory of Types.pdf:application/pdf}
}

@article{milner_theory_1978,
	title = {A theory of type polymorphism in programming},
	volume = {17},
	issn = {0022-0000},
	url = {http://www.sciencedirect.com/science/article/pii/0022000078900144},
	doi = {10.1016/0022-0000(78)90014-4},
	abstract = {The aim of this work is largely a practical one. A widely employed style of programming, particularly in structure-processing languages which impose no discipline of types, entails defining procedures which work well on objects of a wide variety. We present a formal type discipline for such polymorphic procedures in the context of a simple programming language, and a compile time type-checking algorithm W which enforces the discipline. A Semantic Soundness Theorem (based on a formal semantics for the language) states that well-type programs cannot “go wrong” and a Syntactic Soundness Theorem states that if W accepts a program then it is well typed. We also discuss extending these results to richer languages; a type-checking algorithm based on W is in fact already implemented and working, for the metalanguage {ML} in the Edinburgh {LCF} system.},
	pages = {348--375},
	number = {3},
	journaltitle = {Journal of Computer and System Sciences},
	shortjournal = {Journal of Computer and System Sciences},
	author = {Milner, Robin},
	urldate = {2014-10-27},
	date = {1978-12},
	file = {ScienceDirect Full Text PDF:/home/leo/.mozilla/firefox/dlbwkpok.default/zotero/storage/ZHE2Z8DN/Milner - 1978 - A theory of type polymorphism in programming.pdf:application/pdf;ScienceDirect Snapshot:/home/leo/.mozilla/firefox/dlbwkpok.default/zotero/storage/IKTTRDIC/0022000078900144.html:text/html}
}

@inproceedings{luo_ecc_1989,
	title = {{ECC}, an extended calculus of constructions},
	doi = {10.1109/LICS.1989.39193},
	abstract = {A higher-order calculus {ECC} (extended calculus of constructions) is presented which can be seen as an extension of the calculus of constructions by adding strong sum types and a fully cumulative type hierarchy. {ECC} turns out to be rather expressive so that mathematical theories can be abstractly described and abstract mathematics may be adequately formalized. It is shown that {ECC} is strongly normalizing and has other nice proof-theoretic properties. An ω-set (realizability) model is described to show how the essential properties of the calculus can be captured set-theoretically},
	eventtitle = {Fourth Annual Symposium on Logic in Computer Science},
	pages = {386--395},
	booktitle = {Proceedings of the Fourth Annual Symposium on Logic in Computer Science},
	author = {Luo, Z.},
	date = {1989-06},
	keywords = {Abstract algebra, abstract mathematics, Buildings, Calculus, Computer languages, Computer science, extended calculus of constructions, formal languages, formal logic, fully cumulative type hierarchy, Functional programming, higher-order calculus {ECC}, Inference algorithms, Mathematical model, Mathematics, proof-theoretic properties, realizability, set theory, strongly normalizing, strong sum types, ω-set},
	file = {IEEE Xplore Abstract Record:/home/leo/.mozilla/firefox/dlbwkpok.default/zotero/storage/JQZFDS6C/abs_all.html:text/html;IEEE Xplore Full Text PDF:/home/leo/.mozilla/firefox/dlbwkpok.default/zotero/storage/F73MQPKF/Luo - 1989 - ECC, an extended calculus of constructions.pdf:application/pdf}
}

@article{coquand_calculus_1988,
	title = {The calculus of constructions},
	volume = {76},
	issn = {0890-5401},
	url = {http://www.sciencedirect.com/science/article/pii/0890540188900053},
	doi = {10.1016/0890-5401(88)90005-3},
	pages = {95--120},
	number = {2},
	journaltitle = {Information and Computation},
	shortjournal = {Information and Computation},
	author = {Coquand, Thierry and Huet, Gérard},
	urldate = {2014-10-31},
	date = {1988-02},
	file = {ScienceDirect Full Text PDF:/home/leo/.mozilla/firefox/dlbwkpok.default/zotero/storage/FIGSIM9F/Coquand and Huet - 1988 - The calculus of constructions.pdf:application/pdf;ScienceDirect Snapshot:/home/leo/.mozilla/firefox/dlbwkpok.default/zotero/storage/FHSASMHG/0890540188900053.html:text/html}
}

@incollection{bruijn_mathematical_1970,
	title = {The mathematical language {AUTOMATH}, its usage, and some of its extensions},
	rights = {©1970 Springer-Verlag},
	isbn = {978-3-540-04914-2, 978-3-540-36262-3},
	url = {http://link.springer.com/chapter/10.1007/BFb0060623},
	series = {Lecture Notes in Mathematics},
	pages = {29--61},
	number = {125},
	booktitle = {Symposium on Automatic Demonstration},
	publisher = {Springer Berlin Heidelberg},
	author = {Bruijn, N. G. de},
	editor = {Laudet, M. and Lacombe, D. and Nolin, L. and Schützenberger, M.},
	urldate = {2014-10-31},
	date = {1970-01-01},
	langid = {english},
	keywords = {Mathematical Logic and Foundations},
	file = {Snapshot:/home/leo/.mozilla/firefox/dlbwkpok.default/zotero/storage/5A6MX26T/BFb0060623.html:text/html}
}

@incollection{parigot_-calculus:_1992,
	title = {λμ-Calculus: An algorithmic interpretation of classical natural deduction},
	rights = {©1992 Springer-Verlag},
	isbn = {978-3-540-55727-2, 978-3-540-47279-7},
	url = {http://link.springer.com/chapter/10.1007/BFb0013061},
	series = {Lecture Notes in Computer Science},
	shorttitle = {λμ-Calculus},
	pages = {190--201},
	number = {624},
	booktitle = {Logic Programming and Automated Reasoning},
	publisher = {Springer Berlin Heidelberg},
	author = {Parigot, Michel},
	editor = {Voronkov, Andrei},
	urldate = {2014-11-01},
	date = {1992-01-01},
	langid = {english},
	keywords = {Artificial Intelligence (incl. Robotics), Mathematical Logic and Formal Languages, Mathematical Logic and Foundations},
	file = {Full Text PDF:/home/leo/.mozilla/firefox/dlbwkpok.default/zotero/storage/B66UD79G/Parigot - 1992 - λμ-Calculus An algorithmic interpretation of clas.pdf:application/pdf;Snapshot:/home/leo/.mozilla/firefox/dlbwkpok.default/zotero/storage/R4P96PRQ/10.html:text/html}
}

@incollection{girard_extension_1971,
	title = {Une Extension De ĽInterpretation De Gödel a ĽAnalyse, Et Son Application a ĽElimination Des Coupures Dans ĽAnalyse Et La Theorie Des Types},
	volume = {Volume 63},
	isbn = {0049-237X},
	url = {http://www.sciencedirect.com/science/article/pii/S0049237X08708437},
	series = {Proceedings of the Second Scandinavian Logic Symposium},
	pages = {63--92},
	booktitle = {Studies in Logic and the Foundations of Mathematics},
	publisher = {Elsevier},
	author = {Girard, Jean-Yves},
	editor = {{J.E. Fenstad}},
	urldate = {2014-11-23},
	date = {1971},
	file = {[J._E._Fenstad_(editor)]_Proceedings_of_the_Second(BookFi.org).pdf:/home/leo/.mozilla/firefox/dlbwkpok.default/zotero/storage/M6VNXRG5/[J._E._Fenstad_(editor)]_Proceedings_of_the_Second(BookFi.org).pdf:application/pdf;ScienceDirect Snapshot:/home/leo/.mozilla/firefox/dlbwkpok.default/zotero/storage/A4IWMW4C/S0049237X08708437.html:text/html}
}

@online{_hott_????,
	title = {The {HoTT} Book},
	url = {http://homotopytypetheory.org/book/},
	abstract = {Homotopy Type Theory: Univalent Foundations of Mathematics The Univalent Foundations Program Institute for Advanced Study Buy a hardcover copy for \$21.83. [609 pages, 6" × 9" size, hardcover] Buy a...},
	titleaddon = {Homotopy Type Theory},
	urldate = {2014-11-02},
	file = {Snapshot:/home/leo/.mozilla/firefox/dlbwkpok.default/zotero/storage/VZWDBZ64/book.html:text/html}
}

@article{kleene_inconsistency_1935,
	title = {The Inconsistency of Certain Formal Logics},
	volume = {36},
	rights = {Copyright © 1935 Annals of Mathematics},
	issn = {0003-486X},
	url = {http://www.jstor.org/stable/1968646},
	doi = {10.2307/1968646},
	series = {Second Series},
	pages = {630--636},
	number = {3},
	journaltitle = {Annals of Mathematics},
	shortjournal = {Annals of Mathematics},
	author = {Kleene, S. C. and Rosser, J. B.},
	urldate = {2014-11-02},
	date = {1935-07-01},
	file = {JSTOR Full Text PDF:/home/leo/.mozilla/firefox/dlbwkpok.default/zotero/storage/RBRQN59R/Kleene and Rosser - 1935 - The Inconsistency of Certain Formal Logics.pdf:application/pdf}
}

@book{artin_orie_1972,
	location = {Berlin; New York},
	edition = {2. éd.},
	title = {Théorie des topos et cohomologie étale des schémas},
	isbn = {3540058966},
	series = {Séminaire de géométrie algébrique du Bois-Marie},
	number = {{SGA} 4},
	publisher = {Springer-Verlag},
	author = {Artin, Michael},
	editora = {Grothendieck, Alexander and Verdier, Jean Louis},
	editoratype = {collaborator},
	date = {1972},
	keywords = {Categories (Mathematics), Geometry, Algebraic, Homology theory, Sheaf theory}
}

@thesis{girard_interpretation_1972,
	location = {Paris},
	title = {Interprétation fonctionnelle et élimination des coupures de l’arithmétique d’ordre supérieur},
	institution = {Université Paris 7},
	type = {phdthesis},
	author = {Girard, Jean-Yves},
	date = {1972}
}